// Vulkan enums captured in macros, which you can define to do anything you want before including this file.
// If you don't define the macros before including this, their default definitions create functions to convert the enums to strings.
// 		e.g. const char* VkSampleCountFlags_str(const char* label, VkSampleCountFlags value) {...return value in string form...}

#ifndef VULKAN_ENUM_BEGIN
#pragma warning(disable:4996)
#define VULKAN_ENUM_BEGIN(TYPE, PREFIX, IS_BITFIELD) static const char* TYPE ## _str(const char* label, TYPE value) {static char tmp[1024]; char* ptr=tmp; auto prefix_len = strlen(#PREFIX); bool b=IS_BITFIELD;
#define VULKAN_ENUM_ADD(VALUE) if ((b && ((value&VALUE)==VALUE)) || (!b && value==VALUE)) ptr += sprintf(ptr, "%s%s", ptr==tmp ? label:"|", #VALUE+prefix_len);
#define VULKAN_ENUM_END return tmp;}
#define VULKAN_POD(TYPE, FMT) static const char* TYPE ## _str(const char* label, TYPE value) {static char tmp[1024]; sprintf(tmp, "%s"FMT, label, value); return tmp;}
#define VULKAN_STRUCT_BEGIN(TYPE) static const char* TYPE ## _str(const char* label, TYPE& obj) {static char tmp[1024]; char* ptr=tmp;
#define VULKAN_STRUCT_VAL(TYPE, NAME) ptr += sprintf(ptr, "%s\n", TYPE ## _str(#NAME, obj.NAME));
#define VULKAN_STRUCT_PTR(TYPE, NAME) ptr += sprintf(ptr, "%s\n", #NAME); if (obj.NAME) ptr += sprintf(ptr, "%s\n", TYPE ## _str("", (TYPE&)*obj.NAME));
#define VULKAN_STRUCT_ARR(TYPE, NAME, COUNT) ptr += sprintf(ptr, "%s\n", #NAME); for (int i=0; i<(int)obj.COUNT; ++i) ptr += sprintf(ptr, "%s\n", TYPE ## _str("", (TYPE&)obj.NAME[i]));
#define VULKAN_STRUCT_HANDLE(TYPE, NAME)
#define VULKAN_STRUCT_HANDLE_ARR(TYPE, NAME, COUNT)
#define VULKAN_STRUCT_STR(PTR)
#define VULKAN_STRUCT_MEM(TYPE, PTR)
#define VULKAN_STRUCT_END return tmp;}
#define VK_TO_STRING(TYPE, VAR) TYPE ## _str(#VAR " = ", VAR)
#endif

// plain old data

VULKAN_POD(int32_t, "%d")
VULKAN_POD(uint32_t, "%u")
VULKAN_POD(float, "%f")
VULKAN_POD(bool, "%u")
VULKAN_POD(size_t, "%zu")

// enums

VULKAN_ENUM_BEGIN(VkPipelineColorBlendStateCreateFlags, VK_PIPELINE_COLOR_BLEND_STATE_CREATE_, true)
VULKAN_ENUM_ADD(VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkLogicOp, VK_LOGIC_OP_, false)
VULKAN_ENUM_ADD(VK_LOGIC_OP_CLEAR)
VULKAN_ENUM_ADD(VK_LOGIC_OP_AND)
VULKAN_ENUM_ADD(VK_LOGIC_OP_AND_REVERSE)
VULKAN_ENUM_ADD(VK_LOGIC_OP_COPY)
VULKAN_ENUM_ADD(VK_LOGIC_OP_AND_INVERTED)
VULKAN_ENUM_ADD(VK_LOGIC_OP_NO_OP)
VULKAN_ENUM_ADD(VK_LOGIC_OP_XOR)
VULKAN_ENUM_ADD(VK_LOGIC_OP_OR)
VULKAN_ENUM_ADD(VK_LOGIC_OP_NOR)
VULKAN_ENUM_ADD(VK_LOGIC_OP_EQUIVALENT)
VULKAN_ENUM_ADD(VK_LOGIC_OP_INVERT)
VULKAN_ENUM_ADD(VK_LOGIC_OP_OR_REVERSE)
VULKAN_ENUM_ADD(VK_LOGIC_OP_COPY_INVERTED)
VULKAN_ENUM_ADD(VK_LOGIC_OP_OR_INVERTED)
VULKAN_ENUM_ADD(VK_LOGIC_OP_NAND)
VULKAN_ENUM_ADD(VK_LOGIC_OP_SET)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkRenderPassCreateFlags, VK_RENDER_PASS_CREATE_, true)
VULKAN_ENUM_ADD(VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkAttachmentDescriptionFlags, VK_ATTACHMENT_DESCRIPTION_, true)
VULKAN_ENUM_ADD(VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkSubpassDescriptionFlags, VK_SUBPASS_DESCRIPTION_, true)
VULKAN_ENUM_ADD(VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX)
VULKAN_ENUM_ADD(VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX)
VULKAN_ENUM_ADD(VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM)
VULKAN_ENUM_ADD(VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM)
VULKAN_ENUM_ADD(VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT)
VULKAN_ENUM_ADD(VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT)
VULKAN_ENUM_ADD(VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT)
VULKAN_ENUM_ADD(VK_SUBPASS_DESCRIPTION_ENABLE_LEGACY_DITHERING_BIT_EXT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkSampleCountFlags, VK_SAMPLE_COUNT_, true)
VULKAN_ENUM_ADD(VK_SAMPLE_COUNT_1_BIT)
VULKAN_ENUM_ADD(VK_SAMPLE_COUNT_2_BIT)
VULKAN_ENUM_ADD(VK_SAMPLE_COUNT_4_BIT)
VULKAN_ENUM_ADD(VK_SAMPLE_COUNT_8_BIT)
VULKAN_ENUM_ADD(VK_SAMPLE_COUNT_16_BIT)
VULKAN_ENUM_ADD(VK_SAMPLE_COUNT_32_BIT)
VULKAN_ENUM_ADD(VK_SAMPLE_COUNT_64_BIT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkPipelineBindPoint, VK_PIPELINE_BIND_POINT_, false)
VULKAN_ENUM_ADD(VK_PIPELINE_BIND_POINT_GRAPHICS)
VULKAN_ENUM_ADD(VK_PIPELINE_BIND_POINT_COMPUTE)
VULKAN_ENUM_ADD(VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkAttachmentLoadOp, VK_ATTACHMENT_LOAD_OP_, false)
VULKAN_ENUM_ADD(VK_ATTACHMENT_LOAD_OP_LOAD)
VULKAN_ENUM_ADD(VK_ATTACHMENT_LOAD_OP_CLEAR)
VULKAN_ENUM_ADD(VK_ATTACHMENT_LOAD_OP_DONT_CARE)
VULKAN_ENUM_ADD(VK_ATTACHMENT_LOAD_OP_NONE_EXT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkAttachmentStoreOp, VK_ATTACHMENT_STORE_OP_, false)
VULKAN_ENUM_ADD(VK_ATTACHMENT_STORE_OP_STORE)
VULKAN_ENUM_ADD(VK_ATTACHMENT_STORE_OP_DONT_CARE)
VULKAN_ENUM_ADD(VK_ATTACHMENT_STORE_OP_NONE)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkPipelineStageFlags, VK_PIPELINE_STAGE_, true)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_VERTEX_INPUT_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_VERTEX_SHADER_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_TRANSFER_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_HOST_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_NONE)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkAccessFlags, VK_ACCESS_, true)
VULKAN_ENUM_ADD(VK_ACCESS_INDIRECT_COMMAND_READ_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_INDEX_READ_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_UNIFORM_READ_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_INPUT_ATTACHMENT_READ_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_SHADER_READ_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_SHADER_WRITE_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_COLOR_ATTACHMENT_READ_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_TRANSFER_READ_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_TRANSFER_WRITE_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_HOST_READ_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_HOST_WRITE_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_MEMORY_READ_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_MEMORY_WRITE_BIT)
VULKAN_ENUM_ADD(VK_ACCESS_NONE)
VULKAN_ENUM_ADD(VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT)
VULKAN_ENUM_ADD(VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT)
VULKAN_ENUM_ADD(VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT)
VULKAN_ENUM_ADD(VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT)
VULKAN_ENUM_ADD(VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT)
VULKAN_ENUM_ADD(VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR)
VULKAN_ENUM_ADD(VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR)
VULKAN_ENUM_ADD(VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT)
VULKAN_ENUM_ADD(VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR)
VULKAN_ENUM_ADD(VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV)
VULKAN_ENUM_ADD(VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkDependencyFlags, VK_DEPENDENCY_, true)
VULKAN_ENUM_ADD(VK_DEPENDENCY_BY_REGION_BIT)
VULKAN_ENUM_ADD(VK_DEPENDENCY_DEVICE_GROUP_BIT)
VULKAN_ENUM_ADD(VK_DEPENDENCY_VIEW_LOCAL_BIT)
VULKAN_ENUM_ADD(VK_DEPENDENCY_FEEDBACK_LOOP_BIT_EXT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkPipelineLayoutCreateFlags, VK_PIPELINE_LAYOUT_CREATE_, true)
VULKAN_ENUM_ADD(VK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkShaderStageFlags, VK_SHADER_STAGE_, true)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_VERTEX_BIT)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_GEOMETRY_BIT)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_FRAGMENT_BIT)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_COMPUTE_BIT)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_ALL_GRAPHICS)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_ALL)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_RAYGEN_BIT_KHR)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_ANY_HIT_BIT_KHR)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_MISS_BIT_KHR)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_INTERSECTION_BIT_KHR)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_CALLABLE_BIT_KHR)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_TASK_BIT_EXT)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_MESH_BIT_EXT)
VULKAN_ENUM_ADD(VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI)
//VULKAN_ENUM_ADD(VK_SHADER_STAGE_CLUSTER_CULLING_BIT_HUAWEI)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkDescriptorSetLayoutCreateFlags, VK_DESCRIPTOR_SET_LAYOUT_CREATE_, true)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_SET_LAYOUT_CREATE_DESCRIPTOR_BUFFER_BIT_EXT)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_SET_LAYOUT_CREATE_EMBEDDED_IMMUTABLE_SAMPLERS_BIT_EXT)
//VULKAN_ENUM_ADD(VK_DESCRIPTOR_SET_LAYOUT_CREATE_INDIRECT_BINDABLE_BIT_NV)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_EXT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkDescriptorType, VK_DESCRIPTOR_TYPE_, false)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_SAMPLER)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_STORAGE_IMAGE)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_STORAGE_BUFFER)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_SAMPLE_WEIGHT_IMAGE_QCOM)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_BLOCK_MATCH_IMAGE_QCOM)
VULKAN_ENUM_ADD(VK_DESCRIPTOR_TYPE_MUTABLE_EXT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkPipelineCreateFlags, VK_PIPELINE_CREATE_, true)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_DERIVATIVE_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_DISPATCH_BASE_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_LIBRARY_BIT_KHR)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_DESCRIPTOR_BUFFER_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RAY_TRACING_OPACITY_MICROMAP_BIT_EXT)
#ifdef VK_ENABLE_BETA_EXTENSIONS
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_RAY_TRACING_DISPLACEMENT_MICROMAP_BIT_NV)
#endif
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_NO_PROTECTED_ACCESS_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_CREATE_PROTECTED_ACCESS_ONLY_BIT_EXT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkPipelineShaderStageCreateFlags, VK_PIPELINE_SHADER_STAGE_CREATE_, true)
VULKAN_ENUM_ADD(VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT)
VULKAN_ENUM_ADD(VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkPipelineDepthStencilStateCreateFlags, VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_, true)
VULKAN_ENUM_ADD(VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT)
VULKAN_ENUM_ADD(VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkCompareOp, VK_COMPARE_OP_, false)
VULKAN_ENUM_ADD(VK_COMPARE_OP_NEVER)
VULKAN_ENUM_ADD(VK_COMPARE_OP_LESS)
VULKAN_ENUM_ADD(VK_COMPARE_OP_EQUAL)
VULKAN_ENUM_ADD(VK_COMPARE_OP_LESS_OR_EQUAL)
VULKAN_ENUM_ADD(VK_COMPARE_OP_GREATER)
VULKAN_ENUM_ADD(VK_COMPARE_OP_NOT_EQUAL)
VULKAN_ENUM_ADD(VK_COMPARE_OP_GREATER_OR_EQUAL)
VULKAN_ENUM_ADD(VK_COMPARE_OP_ALWAYS)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkStencilOp, VK_STENCIL_OP_, false)
VULKAN_ENUM_ADD(VK_STENCIL_OP_KEEP)
VULKAN_ENUM_ADD(VK_STENCIL_OP_ZERO)
VULKAN_ENUM_ADD(VK_STENCIL_OP_REPLACE)
VULKAN_ENUM_ADD(VK_STENCIL_OP_INCREMENT_AND_CLAMP)
VULKAN_ENUM_ADD(VK_STENCIL_OP_DECREMENT_AND_CLAMP)
VULKAN_ENUM_ADD(VK_STENCIL_OP_INVERT)
VULKAN_ENUM_ADD(VK_STENCIL_OP_INCREMENT_AND_WRAP)
VULKAN_ENUM_ADD(VK_STENCIL_OP_DECREMENT_AND_WRAP)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkVertexInputRate, VK_VERTEX_INPUT_RATE_, false)
VULKAN_ENUM_ADD(VK_VERTEX_INPUT_RATE_VERTEX)
VULKAN_ENUM_ADD(VK_VERTEX_INPUT_RATE_INSTANCE)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkPrimitiveTopology, VK_PRIMITIVE_TOPOLOGY_, false)
VULKAN_ENUM_ADD(VK_PRIMITIVE_TOPOLOGY_POINT_LIST)
VULKAN_ENUM_ADD(VK_PRIMITIVE_TOPOLOGY_LINE_LIST)
VULKAN_ENUM_ADD(VK_PRIMITIVE_TOPOLOGY_LINE_STRIP)
VULKAN_ENUM_ADD(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST)
VULKAN_ENUM_ADD(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP)
VULKAN_ENUM_ADD(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN)
VULKAN_ENUM_ADD(VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY)
VULKAN_ENUM_ADD(VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY)
VULKAN_ENUM_ADD(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY)
VULKAN_ENUM_ADD(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY)
VULKAN_ENUM_ADD(VK_PRIMITIVE_TOPOLOGY_PATCH_LIST)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkPolygonMode, VK_POLYGON_MODE_, false)
VULKAN_ENUM_ADD(VK_POLYGON_MODE_FILL)
VULKAN_ENUM_ADD(VK_POLYGON_MODE_LINE)
VULKAN_ENUM_ADD(VK_POLYGON_MODE_POINT)
VULKAN_ENUM_ADD(VK_POLYGON_MODE_FILL_RECTANGLE_NV)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkCullModeFlags, VK_CULL_MODE_, true)
VULKAN_ENUM_ADD(VK_CULL_MODE_NONE)
VULKAN_ENUM_ADD(VK_CULL_MODE_FRONT_BIT)
VULKAN_ENUM_ADD(VK_CULL_MODE_BACK_BIT)
VULKAN_ENUM_ADD(VK_CULL_MODE_FRONT_AND_BACK)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkFrontFace, VK_FRONT_FACE_, false)
VULKAN_ENUM_ADD(VK_FRONT_FACE_COUNTER_CLOCKWISE)
VULKAN_ENUM_ADD(VK_FRONT_FACE_CLOCKWISE)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkImageLayout, VK_IMAGE_LAYOUT_, false)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_UNDEFINED)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_GENERAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_PREINITIALIZED)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_PRESENT_SRC_KHR)
//VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR)
//VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR)
//VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT)
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR)
#ifdef VK_ENABLE_BETA_EXTENSIONS
    VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR)
#endif
#ifdef VK_ENABLE_BETA_EXTENSIONS
    VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR)
#endif
#ifdef VK_ENABLE_BETA_EXTENSIONS
    VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR)
#endif
VULKAN_ENUM_ADD(VK_IMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkFormat, VK_FORMAT_, false)
VULKAN_ENUM_ADD(VK_FORMAT_UNDEFINED)
VULKAN_ENUM_ADD(VK_FORMAT_R4G4_UNORM_PACK8)
VULKAN_ENUM_ADD(VK_FORMAT_R4G4B4A4_UNORM_PACK16)
VULKAN_ENUM_ADD(VK_FORMAT_B4G4R4A4_UNORM_PACK16)
VULKAN_ENUM_ADD(VK_FORMAT_R5G6B5_UNORM_PACK16)
VULKAN_ENUM_ADD(VK_FORMAT_B5G6R5_UNORM_PACK16)
VULKAN_ENUM_ADD(VK_FORMAT_R5G5B5A1_UNORM_PACK16)
VULKAN_ENUM_ADD(VK_FORMAT_B5G5R5A1_UNORM_PACK16)
VULKAN_ENUM_ADD(VK_FORMAT_A1R5G5B5_UNORM_PACK16)
VULKAN_ENUM_ADD(VK_FORMAT_R8_UNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R8_SNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R8_USCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R8_SSCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R8_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R8_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R8_SRGB)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8_UNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8_SNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8_USCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8_SSCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8_SRGB)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8_UNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8_SNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8_USCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8_SSCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8_SRGB)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8_UNORM)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8_SNORM)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8_USCALED)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8_SSCALED)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8_SRGB)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8A8_UNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8A8_SNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8A8_USCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8A8_SSCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8A8_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8A8_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R8G8B8A8_SRGB)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8A8_UNORM)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8A8_SNORM)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8A8_USCALED)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8A8_SSCALED)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8A8_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8A8_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_B8G8R8A8_SRGB)
VULKAN_ENUM_ADD(VK_FORMAT_A8B8G8R8_UNORM_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A8B8G8R8_SNORM_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A8B8G8R8_USCALED_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A8B8G8R8_SSCALED_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A8B8G8R8_UINT_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A8B8G8R8_SINT_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A8B8G8R8_SRGB_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2R10G10B10_UNORM_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2R10G10B10_SNORM_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2R10G10B10_USCALED_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2R10G10B10_SSCALED_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2R10G10B10_UINT_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2R10G10B10_SINT_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2B10G10R10_UNORM_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2B10G10R10_SNORM_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2B10G10R10_USCALED_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2B10G10R10_SSCALED_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2B10G10R10_UINT_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_A2B10G10R10_SINT_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_R16_UNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R16_SNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R16_USCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R16_SSCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R16_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R16_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R16_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16_UNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16_SNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16_USCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16_SSCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16_UNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16_SNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16_USCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16_SSCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16A16_UNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16A16_SNORM)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16A16_USCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16A16_SSCALED)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16A16_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16A16_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R16G16B16A16_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_R32_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R32_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R32_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_R32G32_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R32G32_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R32G32_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_R32G32B32_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R32G32B32_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R32G32B32_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_R32G32B32A32_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R32G32B32A32_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R32G32B32A32_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_R64_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R64_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R64_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_R64G64_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R64G64_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R64G64_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_R64G64B64_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R64G64B64_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R64G64B64_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_R64G64B64A64_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_R64G64B64A64_SINT)
VULKAN_ENUM_ADD(VK_FORMAT_R64G64B64A64_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_B10G11R11_UFLOAT_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_E5B9G9R9_UFLOAT_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_D16_UNORM)
VULKAN_ENUM_ADD(VK_FORMAT_X8_D24_UNORM_PACK32)
VULKAN_ENUM_ADD(VK_FORMAT_D32_SFLOAT)
VULKAN_ENUM_ADD(VK_FORMAT_S8_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_D16_UNORM_S8_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_D24_UNORM_S8_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_D32_SFLOAT_S8_UINT)
VULKAN_ENUM_ADD(VK_FORMAT_BC1_RGB_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC1_RGB_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC1_RGBA_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC1_RGBA_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC2_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC2_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC3_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC3_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC4_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC4_SNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC5_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC5_SNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC6H_UFLOAT_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC6H_SFLOAT_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC7_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_BC7_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_EAC_R11_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_EAC_R11_SNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_EAC_R11G11_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_EAC_R11G11_SNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_4x4_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_4x4_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_5x4_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_5x4_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_5x5_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_5x5_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_6x5_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_6x5_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_6x6_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_6x6_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_8x5_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_8x5_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_8x6_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_8x6_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_8x8_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_8x8_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_10x5_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_10x5_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_10x6_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_10x6_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_10x8_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_10x8_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_10x10_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_10x10_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_12x10_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_12x10_SRGB_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_12x12_UNORM_BLOCK)
VULKAN_ENUM_ADD(VK_FORMAT_ASTC_12x12_SRGB_BLOCK)
VULKAN_ENUM_END

VULKAN_ENUM_BEGIN(VkPipelineVertexInputStateCreateFlags, VK_, true)
VULKAN_ENUM_END
VULKAN_ENUM_BEGIN(VkPipelineInputAssemblyStateCreateFlags, VK_, true)
VULKAN_ENUM_END
VULKAN_ENUM_BEGIN(VkPipelineTessellationStateCreateFlags, VK_, true)
VULKAN_ENUM_END
VULKAN_ENUM_BEGIN(VkPipelineViewportStateCreateFlags, VK_, true)
VULKAN_ENUM_END
VULKAN_ENUM_BEGIN(VkPipelineRasterizationStateCreateFlags, VK_, true)
VULKAN_ENUM_END
VULKAN_ENUM_BEGIN(VkPipelineMultisampleStateCreateFlags, VK_, true)
VULKAN_ENUM_END
VULKAN_ENUM_BEGIN(VkPipelineDynamicStateCreateFlags, VK_, true)
VULKAN_ENUM_END

// structures

VULKAN_STRUCT_BEGIN(VkAttachmentReference)
VULKAN_STRUCT_VAL(uint32_t, attachment)
VULKAN_STRUCT_VAL(VkImageLayout, layout)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkAttachmentDescription)
VULKAN_STRUCT_VAL(VkAttachmentDescriptionFlags, flags)
VULKAN_STRUCT_VAL(VkFormat, format)
VULKAN_STRUCT_VAL(VkSampleCountFlags, samples)
VULKAN_STRUCT_VAL(VkAttachmentLoadOp, loadOp)
VULKAN_STRUCT_VAL(VkAttachmentStoreOp, storeOp)
VULKAN_STRUCT_VAL(VkAttachmentLoadOp, stencilLoadOp)
VULKAN_STRUCT_VAL(VkAttachmentStoreOp, stencilStoreOp)
VULKAN_STRUCT_VAL(VkImageLayout, initialLayout)
VULKAN_STRUCT_VAL(VkImageLayout, finalLayout)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkSubpassDescription)
VULKAN_STRUCT_VAL(VkSubpassDescriptionFlags, flags)
VULKAN_STRUCT_VAL(VkPipelineBindPoint, pipelineBindPoint)
VULKAN_STRUCT_VAL(uint32_t, inputAttachmentCount)
VULKAN_STRUCT_ARR(VkAttachmentReference, pInputAttachments, inputAttachmentCount)
VULKAN_STRUCT_VAL(uint32_t, colorAttachmentCount)
VULKAN_STRUCT_ARR(VkAttachmentReference, pColorAttachments, colorAttachmentCount)
VULKAN_STRUCT_ARR(VkAttachmentReference, pResolveAttachments, colorAttachmentCount)
VULKAN_STRUCT_PTR(VkAttachmentReference, pDepthStencilAttachment)
VULKAN_STRUCT_VAL(uint32_t, preserveAttachmentCount)
VULKAN_STRUCT_ARR(VkAttachmentReference, pPreserveAttachments, preserveAttachmentCount)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkSubpassDependency)
VULKAN_STRUCT_VAL(uint32_t, srcSubpass)
VULKAN_STRUCT_VAL(uint32_t, dstSubpass)
VULKAN_STRUCT_VAL(VkPipelineStageFlags, srcStageMask)
VULKAN_STRUCT_VAL(VkPipelineStageFlags, dstStageMask)
VULKAN_STRUCT_VAL(VkAccessFlags, srcAccessMask)
VULKAN_STRUCT_VAL(VkAccessFlags, dstAccessMask)
VULKAN_STRUCT_VAL(VkDependencyFlags, dependencyFlags)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkRenderPassCreateInfo)
VULKAN_STRUCT_VAL(VkRenderPassCreateFlags, flags)
VULKAN_STRUCT_VAL(uint32_t, attachmentCount)
VULKAN_STRUCT_ARR(VkAttachmentDescription, pAttachments, attachmentCount)
VULKAN_STRUCT_VAL(uint32_t, subpassCount)
VULKAN_STRUCT_ARR(VkSubpassDescription, pSubpasses, subpassCount)
VULKAN_STRUCT_VAL(uint32_t, dependencyCount)
VULKAN_STRUCT_ARR(VkSubpassDependency, pDependencies, dependencyCount)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPushConstantRange)
VULKAN_STRUCT_VAL(VkShaderStageFlags, stageFlags)
VULKAN_STRUCT_VAL(uint32_t, offset)
VULKAN_STRUCT_VAL(uint32_t, size)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPipelineLayoutCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineLayoutCreateFlags, flags)
VULKAN_STRUCT_VAL(uint32_t, setLayoutCount)
VULKAN_STRUCT_HANDLE_ARR(VkDescriptorSetLayout, pSetLayouts, setLayoutCount)
VULKAN_STRUCT_VAL(uint32_t, pushConstantRangeCount)
VULKAN_STRUCT_ARR(VkPushConstantRange, pPushConstantRanges, pushConstantRangeCount)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkDescriptorSetLayoutBinding)
VULKAN_STRUCT_VAL(uint32_t, binding)
VULKAN_STRUCT_VAL(VkDescriptorType, descriptorType)
VULKAN_STRUCT_VAL(uint32_t, descriptorCount)
VULKAN_STRUCT_VAL(VkShaderStageFlags, stageFlags)
VULKAN_STRUCT_HANDLE_ARR(VkSampler, pImmutableSamplers, descriptorCount)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkDescriptorSetLayoutCreateInfo)
VULKAN_STRUCT_VAL(VkDescriptorSetLayoutCreateFlags, flags)
VULKAN_STRUCT_VAL(uint32_t, bindingCount)
VULKAN_STRUCT_HANDLE_ARR(VkDescriptorSetLayoutBinding, pBindings, bindingCount)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkSpecializationMapEntry)
VULKAN_STRUCT_VAL(uint32_t, constantID)
VULKAN_STRUCT_VAL(uint32_t, offset)
VULKAN_STRUCT_VAL(size_t, size)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkSpecializationInfo)
VULKAN_STRUCT_VAL(uint32_t, mapEntryCount)
VULKAN_STRUCT_HANDLE_ARR(VkSpecializationMapEntry, pMapEntries, mapEntryCount)
VULKAN_STRUCT_VAL(size_t, dataSize)
VULKAN_STRUCT_MEM(void*, pData)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPipelineShaderStageCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineShaderStageCreateFlags, flags)
VULKAN_STRUCT_VAL(VkShaderStageFlags, stage)
VULKAN_STRUCT_HANDLE(VkShaderModule, module)
VULKAN_STRUCT_STR(pName)
VULKAN_STRUCT_HANDLE_ARR(VkSpecializationInfo, pSpecializationInfo, 1)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkVertexInputBindingDescription)
VULKAN_STRUCT_VAL(uint32_t, binding)
VULKAN_STRUCT_VAL(uint32_t, stride)
VULKAN_STRUCT_VAL(VkVertexInputRate, inputRate)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkVertexInputAttributeDescription)
VULKAN_STRUCT_VAL(uint32_t, location)
VULKAN_STRUCT_VAL(uint32_t, binding)
VULKAN_STRUCT_VAL(VkFormat, format)
VULKAN_STRUCT_VAL(uint32_t, offset)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPipelineVertexInputStateCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineVertexInputStateCreateFlags, flags)
VULKAN_STRUCT_VAL(uint32_t, vertexBindingDescriptionCount)
VULKAN_STRUCT_HANDLE_ARR(VkVertexInputBindingDescription, pVertexBindingDescriptions, vertexBindingDescriptionCount)
VULKAN_STRUCT_VAL(uint32_t, vertexAttributeDescriptionCount)
VULKAN_STRUCT_HANDLE_ARR(VkVertexInputAttributeDescription, pVertexAttributeDescriptions, vertexAttributeDescriptionCount)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPipelineInputAssemblyStateCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineInputAssemblyStateCreateFlags, flags)
VULKAN_STRUCT_VAL(VkPrimitiveTopology, topology)
VULKAN_STRUCT_VAL(bool, primitiveRestartEnable)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPipelineTessellationStateCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineTessellationStateCreateFlags, flags)
VULKAN_STRUCT_VAL(uint32_t, patchControlPoints)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkViewport)
VULKAN_STRUCT_VAL(float, x)
VULKAN_STRUCT_VAL(float, y)
VULKAN_STRUCT_VAL(float, width)
VULKAN_STRUCT_VAL(float, height)
VULKAN_STRUCT_VAL(float, minDepth)
VULKAN_STRUCT_VAL(float, maxDepth)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkOffset2D)
VULKAN_STRUCT_VAL(int32_t, x)
VULKAN_STRUCT_VAL(int32_t, y)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkExtent2D)
VULKAN_STRUCT_VAL(uint32_t, width)
VULKAN_STRUCT_VAL(uint32_t, height)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkRect2D)
VULKAN_STRUCT_HANDLE(VkOffset2D, offset)
VULKAN_STRUCT_HANDLE(VkExtent2D, extent)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPipelineViewportStateCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineViewportStateCreateFlags, flags)
VULKAN_STRUCT_VAL(uint32_t, viewportCount)
VULKAN_STRUCT_HANDLE_ARR(VkViewport, pViewports, viewportCount)
VULKAN_STRUCT_VAL(uint32_t, scissorCount)
VULKAN_STRUCT_HANDLE_ARR(VkRect2D, pScissors, scissorCount)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPipelineRasterizationStateCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineRasterizationStateCreateFlags, flags)
VULKAN_STRUCT_VAL(bool, depthClampEnable)
VULKAN_STRUCT_VAL(bool, rasterizerDiscardEnable)
VULKAN_STRUCT_VAL(VkPolygonMode, polygonMode)
VULKAN_STRUCT_VAL(VkCullModeFlags, cullMode)
VULKAN_STRUCT_VAL(VkFrontFace, frontFace)
VULKAN_STRUCT_VAL(bool, depthBiasEnable)
VULKAN_STRUCT_VAL(float, depthBiasConstantFactor)
VULKAN_STRUCT_VAL(float, depthBiasClamp)
VULKAN_STRUCT_VAL(float, depthBiasSlopeFactor)
VULKAN_STRUCT_VAL(float, lineWidth)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPipelineMultisampleStateCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineMultisampleStateCreateFlags, flags)
VULKAN_STRUCT_VAL(VkSampleCountFlags, rasterizationSamples)
VULKAN_STRUCT_VAL(bool, sampleShadingEnable)
VULKAN_STRUCT_VAL(float, minSampleShading)
//const VkSampleMask* pSampleMask;
VULKAN_STRUCT_VAL(bool, alphaToCoverageEnable)
VULKAN_STRUCT_VAL(bool, alphaToOneEnable)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkStencilOpState)
VULKAN_STRUCT_VAL(VkStencilOp, failOp)
VULKAN_STRUCT_VAL(VkStencilOp, passOp)
VULKAN_STRUCT_VAL(VkStencilOp, depthFailOp)
VULKAN_STRUCT_VAL(VkCompareOp, compareOp)
VULKAN_STRUCT_VAL(uint32_t, compareMask)
VULKAN_STRUCT_VAL(uint32_t, writeMask)
VULKAN_STRUCT_VAL(uint32_t, reference)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPipelineDepthStencilStateCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineDepthStencilStateCreateFlags, flags)
VULKAN_STRUCT_VAL(bool, depthTestEnable)
VULKAN_STRUCT_VAL(bool, depthWriteEnable)
VULKAN_STRUCT_VAL(VkCompareOp, depthCompareOp)
VULKAN_STRUCT_VAL(bool, depthBoundsTestEnable)
VULKAN_STRUCT_VAL(bool, stencilTestEnable)
VULKAN_STRUCT_VAL(VkStencilOpState, front)
VULKAN_STRUCT_VAL(VkStencilOpState, back)
VULKAN_STRUCT_VAL(float, minDepthBounds)
VULKAN_STRUCT_VAL(float, maxDepthBounds)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPipelineColorBlendStateCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineColorBlendStateCreateFlags, flags)
VULKAN_STRUCT_VAL(bool, logicOpEnable)
VULKAN_STRUCT_VAL(VkLogicOp, logicOp)
VULKAN_STRUCT_VAL(uint32_t, attachmentCount)
//const VkPipelineColorBlendAttachmentState*    pAttachments;
VULKAN_STRUCT_PTR(float, blendConstants)
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkPipelineDynamicStateCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineDynamicStateCreateFlags, flags)
VULKAN_STRUCT_VAL(uint32_t, dynamicStateCount)
//const VkDynamicState*                pDynamicStates;
VULKAN_STRUCT_END

VULKAN_STRUCT_BEGIN(VkGraphicsPipelineCreateInfo)
VULKAN_STRUCT_VAL(VkPipelineCreateFlags, flags)
VULKAN_STRUCT_VAL(uint32_t, stageCount)
VULKAN_STRUCT_ARR(VkPipelineShaderStageCreateInfo, pStages, stageCount)
VULKAN_STRUCT_PTR(VkPipelineVertexInputStateCreateInfo, pVertexInputState)
VULKAN_STRUCT_PTR(VkPipelineInputAssemblyStateCreateInfo, pInputAssemblyState)
VULKAN_STRUCT_PTR(VkPipelineTessellationStateCreateInfo, pTessellationState)
VULKAN_STRUCT_PTR(VkPipelineViewportStateCreateInfo, pViewportState)
VULKAN_STRUCT_PTR(VkPipelineRasterizationStateCreateInfo, pRasterizationState)
VULKAN_STRUCT_PTR(VkPipelineMultisampleStateCreateInfo, pMultisampleState)
VULKAN_STRUCT_PTR(VkPipelineDepthStencilStateCreateInfo, pDepthStencilState)
VULKAN_STRUCT_PTR(VkPipelineColorBlendStateCreateInfo, pColorBlendState)
VULKAN_STRUCT_PTR(VkPipelineDynamicStateCreateInfo, pDynamicState)
VULKAN_STRUCT_HANDLE(VkPipelineLayout, layout)
VULKAN_STRUCT_HANDLE(VkRenderPass, renderPass)
VULKAN_STRUCT_VAL(uint32_t, subpass)
VULKAN_STRUCT_HANDLE(VkPipeline, basePipelineHandle)
VULKAN_STRUCT_VAL(uint32_t, basePipelineIndex)
VULKAN_STRUCT_END
